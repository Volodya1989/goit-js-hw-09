{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,WAAYF,SAASC,cAAc,wBAErC,IAAIE,EAAQ,KACRC,EAAW,KACXC,EAAQ,KACZ,MAAMC,EAAW,GACjBR,EAAKC,OAAOQ,iBAAiB,SAASC,IAChCA,EAAEC,OAAOC,MAAQ,IACnBF,EAAEC,OAAOC,MAAQ,GAEG,WAAlBF,EAAEC,OAAOE,MAAqBH,EAAEC,OAAOC,MAAQ,IACjDF,EAAEC,OAAOC,MAAQ,GAGnBJ,EAASE,EAAEC,OAAOE,MAAQH,EAAEC,OAAOC,KAAK,IA2E1CZ,EAAKC,OAAOQ,iBAAiB,UAzEZC,IACfA,EAAEI,iBAEF,MAAQC,MAAAC,EAAKC,OAAEA,EAAMC,KAAEA,GAASV,EAEhCH,EAAQc,aAAY,KAsDtB,IAAuBC,EAAUL,EAR7B,GA7CAT,GAAY,GAqDOc,EAnDLd,EAmDeS,EAnDLC,EAoDnB,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAR,E,MAAUL,IAEpBQ,EAAO,CAAEK,SAAAR,E,MAAUL,GAAQ,GAE5BA,EAAM,KA5DNc,MAAK,EAAGD,SAAAE,EAAQf,MAAEA,MACA,IAAbe,GACFvB,EAAQwB,SAAShB,GACjBiB,QAAQC,IAAI,uBAAqBH,QAAiBvB,QAClD2B,EAAApC,GAASqC,OAAOC,QACd,uBAAqBN,QAAiBvB,OAAY,CAEhD8B,QAAStB,MAIbR,GAASwB,SAASb,GAClBc,QAAQC,IAAI,uBAAqBH,QAAiBvB,QAClD2B,EAAApC,GAASqC,OAAOC,QACd,uBAAqBN,QAAiBvB,OAAY,CAEhD8B,QAAStB,I,IAKhBuB,OAAM,EAAGV,SAAAW,EAAQxB,MAAEA,MACD,IAAbwB,GACFhC,EAAQwB,SAAShB,GACjBiB,QAAQC,IAAI,sBAAoBM,QAAiBhC,QACjD2B,EAAApC,GAASqC,OAAOK,QACd,sBAAoBD,QAAiBhC,OAAY,CAE/C8B,QAAStB,MAIbR,GAASwB,SAASb,GAClBc,QAAQC,IAAI,sBAAoBM,QAAiBhC,QACjD2B,EAAApC,GAASqC,OAAOK,QACd,sBAAoBD,QAAehC,OAAY,CAE7C8B,QAAStB,I,IAKfT,IAAayB,SAASd,GACxB,OAAOwB,cAAcpC,EAAM,GAE5Ba,GACHZ,EAAW,KACXC,EAAQ,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  inputDelay: document.querySelector(\"input[name='delay']\"),\n};\nlet intId = null;\nlet position = null;\nlet total = null;\nconst formData = {};\nrefs.formEl.addEventListener('input', e => {\n  if (e.target.value < 0) {\n    e.target.value = 0;\n  }\n  if (e.target.name === 'amount' && e.target.value < 1) {\n    e.target.value = 1;\n  }\n\n  formData[e.target.name] = e.target.value;\n});\nconst onSubmit = e => {\n  e.preventDefault();\n\n  const { delay, amount, step } = formData;\n\n  intId = setInterval(() => {\n    position += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        if (position === 1) {\n          total = parseInt(delay);\n          console.log(`✅ Fulfilled promise ${position} in ${total} ms`);\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${total} ms`,\n            {\n              timeout: delay,\n            }\n          );\n        } else {\n          total += parseInt(step);\n          console.log(`✅ Fulfilled promise ${position} in ${total} ms`);\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${total} ms`,\n            {\n              timeout: delay,\n            }\n          );\n        }\n      })\n      .catch(({ position, delay }) => {\n        if (position === 1) {\n          total = parseInt(delay);\n          console.log(`❌ Rejected promise ${position} in ${total} ms`);\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${total} ms`,\n            {\n              timeout: delay,\n            }\n          );\n        } else {\n          total += parseInt(step);\n          console.log(`❌ Rejected promise ${position} in ${total} ms`);\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${total} ms`,\n            {\n              timeout: delay,\n            }\n          );\n        }\n      });\n    if (position === parseInt(amount)) {\n      return clearInterval(intId);\n    }\n  }, step);\n  position = null;\n  total = null;\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.formEl.addEventListener('submit', onSubmit);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","inputDelay","$47d4ff9957288465$var$intId","$47d4ff9957288465$var$position","$47d4ff9957288465$var$total","$47d4ff9957288465$var$formData","addEventListener","e","target","value","name","preventDefault","delay","delay1","amount","step","setInterval","position3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","position1","parseInt","console","log","$parcel$interopDefault","Notify","success","timeout","catch","position2","failure","clearInterval"],"version":3,"file":"03-promises.8ed5b38d.js.map"}