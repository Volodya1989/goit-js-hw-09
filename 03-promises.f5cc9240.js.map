{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,QAAS,MAGX,MAAMC,EAASC,SAASC,cAAc,sBAChCC,EAAYF,SAASC,cAAc,yBAyCzC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbN,EAAOc,iBAAiB,UA9CPC,IACfZ,EAAUa,UAAW,EACrBD,EAAEE,iBAEF,MAAMX,MAAEA,EAAKY,OAAEA,EAAMC,KAAEA,GAASJ,EAAEK,OAAOC,SACzC,IAAIC,EAAaC,OAAOjB,EAAMkB,OAC1BC,EAAQH,EAAaC,OAAOJ,EAAKK,OAarC,IAAK,IAAIE,EAAI,EAAGA,GAAKR,EAAOM,MAAOE,GAAK,EACtCtB,EAAcsB,EAAGJ,GACdK,MAAK,KAbV,IAAmBC,IAcHF,EAbd9B,EAAAF,GAASG,OAAOgC,QACd,uBAAqBD,QAAUH,GAAQF,OAAIJ,EAAOK,YAYpC,IAEbM,OAAM,KAXX,IAAmBF,IAYHF,EAXd9B,EAAAF,GAASG,OAAOkC,QACd,sBAAoBH,QAAQH,GAAQF,OAAIJ,EAAOK,YAUjC,IAEhBF,GAAcC,OAAOJ,EAAKK,QAlC9B,SAAqBF,GACnBT,YAAW,KACTV,EAAUa,UAAW,EACrBhB,EAAOgC,OAAO,GACbV,EAAa,I,CAgChBW,CAAYX,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  timeout: 3000,\n});\n\nconst formEl = document.querySelector('form[class=\"form\"]');\nconst btnCreate = document.querySelector('button[type=\"submit\"]');\n\nfunction activateBtn(delayValue) {\n  setTimeout(() => {\n    btnCreate.disabled = false;\n    formEl.reset();\n  }, delayValue + 3000);\n}\n\nconst onSubmit = e => {\n  btnCreate.disabled = true;\n  e.preventDefault();\n\n  const { delay, amount, step } = e.target.elements;\n  let delayValue = Number(delay.value);\n  let total = delayValue - Number(step.value);\n\n  function onSuccess(i) {\n    Notiflix.Notify.success(\n      `✅ Fulfilled promise ${i} in ${(total += Number(step.value))} ms`\n    );\n  }\n  function onFailure(i) {\n    Notiflix.Notify.failure(\n      `❌ Rejected promise ${i} in ${(total += Number(step.value))} ms`\n    );\n  }\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, delayValue)\n      .then(() => {\n        onSuccess(i);\n      })\n      .catch(() => {\n        onFailure(i);\n      });\n    delayValue += Number(step.value);\n  }\n  activateBtn(delayValue);\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","timeout","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$btnCreate","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","disabled","preventDefault","amount","step","target","elements","delayValue","Number","value","total","i1","then","i","success","catch","failure","reset","$47d4ff9957288465$var$activateBtn"],"version":3,"file":"03-promises.f5cc9240.js.map"}