{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,WAAYF,SAASC,cAAc,wBAEjCE,EAAQ,KACRC,EAAW,KACXC,EAAQ,KACNC,EAAW,GACjBR,EAAKC,OAAOQ,iBAAiB,SAAS,SAAAC,GAChCA,EAAEC,OAAOC,MAAQ,IACnBF,EAAEC,OAAOC,MAAQ,GAEG,WAAlBF,EAAEC,OAAOE,MAAqBH,EAAEC,OAAOC,MAAQ,IACjDF,EAAEC,OAAOC,MAAQ,GAGnBJ,EAASE,EAAEC,OAAOE,MAAQH,EAAEC,OAAOC,K,IA2ErCZ,EAAKC,OAAOQ,iBAAiB,UAzEZ,SAAAC,GACfA,EAAEI,iBAEF,IAAQC,EAAwBP,EAAxBQ,MAAOC,EAAiBT,EAAjBS,OAAQC,EAASV,EAATU,KAEvBb,EAAQc,aAAY,WAsDtB,IAAuBC,EAAUJ,EAR7B,IAQmBI,EArDnBd,GAAY,EAqDiBU,EAnDLD,EAoDnB,IAAIM,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAR,EAAUJ,UAEpBO,EAAO,CAAEK,SAAAR,EAAUJ,S,GAEpBA,E,KA5DAa,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUZ,EAAKc,EAALd,MACA,IAAbe,GACFxB,EAAQyB,SAAShB,GACjBiB,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAAN5B,EAAM,QAC1D6B,EAAAtC,GAASuC,OAAOC,QACd,uBAAwCH,OAAfJ,EAAS,QAAYI,OAAN5B,EAAM,OAC5C,CACAgC,QAASvB,MAIbT,GAASyB,SAASd,GAClBe,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAAN5B,EAAM,QAC1D6B,EAAAtC,GAASuC,OAAOC,QACd,uBAAwCH,OAAfJ,EAAS,QAAYI,OAAN5B,EAAM,OAC5C,CACAgC,QAASvB,I,IAKhBwB,OAAM,SAAAV,G,IAAGW,EAAQX,EAARF,SAAUZ,EAAKc,EAALd,MACD,IAAbyB,GACFlC,EAAQyB,SAAShB,GACjBiB,QAAQC,IAAI,sBAAuCC,OAAfM,EAAS,QAAYN,OAAN5B,EAAM,QACzD6B,EAAAtC,GAASuC,OAAOK,QACd,sBAAuCP,OAAfM,EAAS,QAAYN,OAAN5B,EAAM,OAC3C,CACAgC,QAASvB,MAIbT,GAASyB,SAASd,GAClBe,QAAQC,IAAI,sBAAuCC,OAAfM,EAAS,QAAYN,OAAN5B,EAAM,QACzD6B,EAAAtC,GAASuC,OAAOK,QACd,sBAAqCP,OAAfM,EAAS,QAAYN,OAAN5B,EAAM,OAC3C,CACEgC,QAASvB,I,IAKfV,IAAa0B,SAASf,GACxB,OAAO0B,cAActC,E,GAEtBa,GACHZ,EAAW,KACXC,EAAQ,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  inputDelay: document.querySelector(\"input[name='delay']\"),\n};\nlet intId = null;\nlet position = null;\nlet total = null;\nconst formData = {};\nrefs.formEl.addEventListener('input', e => {\n  if (e.target.value < 0) {\n    e.target.value = 0;\n  }\n  if (e.target.name === 'amount' && e.target.value < 1) {\n    e.target.value = 1;\n  }\n\n  formData[e.target.name] = e.target.value;\n});\nconst onSubmit = e => {\n  e.preventDefault();\n\n  const { delay, amount, step } = formData;\n\n  intId = setInterval(() => {\n    position += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        if (position === 1) {\n          total = parseInt(delay);\n          console.log(`✅ Fulfilled promise ${position} in ${total} ms`);\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${total} ms`,\n            {\n              timeout: delay,\n            }\n          );\n        } else {\n          total += parseInt(step);\n          console.log(`✅ Fulfilled promise ${position} in ${total} ms`);\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${total} ms`,\n            {\n              timeout: delay,\n            }\n          );\n        }\n      })\n      .catch(({ position, delay }) => {\n        if (position === 1) {\n          total = parseInt(delay);\n          console.log(`❌ Rejected promise ${position} in ${total} ms`);\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${total} ms`,\n            {\n              timeout: delay,\n            }\n          );\n        } else {\n          total += parseInt(step);\n          console.log(`❌ Rejected promise ${position} in ${total} ms`);\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${total} ms`,\n            {\n              timeout: delay,\n            }\n          );\n        }\n      });\n    if (position === parseInt(amount)) {\n      return clearInterval(intId);\n    }\n  }, step);\n  position = null;\n  total = null;\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.formEl.addEventListener('submit', onSubmit);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","inputDelay","$ce04d3a99e08e73b$var$intId","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$total","$ce04d3a99e08e73b$var$formData","addEventListener","e","target","value","name","preventDefault","delay1","delay","amount","step","setInterval","position3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","param","position1","parseInt","console","log","concat","$parcel$interopDefault","Notify","success","timeout","catch","position2","failure","clearInterval"],"version":3,"file":"03-promises.a0c612ec.js.map"}