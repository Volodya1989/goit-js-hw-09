{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,QAAS,MAGX,IAAMC,EAASC,SAASC,cAAc,sBAChCC,EAAYF,SAASC,cAAc,yBAgDzCF,EAAOI,iBAAiB,UA/CP,SAAAC,G,mBAiCjB,SAAuBC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAzBHQ,CAAcC,EAAGC,GACdC,MAAK,YAZV,SAAmBF,GACjBpB,EAAAF,GAASG,OAAOsB,QACd,uBAAkCC,OAATJ,EAAE,QAAoCI,OAA7BC,GAASC,OAAOC,EAAKC,OAAQ,O,CAW7DC,CAAUT,E,IAEXU,OAAM,YAVX,SAAmBV,GACjBpB,EAAAF,GAASG,OAAO8B,QACd,sBAA+BP,OAATJ,EAAE,QAAoCI,OAA7BC,GAASC,OAAOC,EAAKC,OAAQ,O,CAS1DI,CAAUZ,E,IAEdC,GAAcK,OAAOC,EAAKC,M,EAxB5BrB,EAAU0B,UAAW,EACrBxB,EAAEyB,iBAEF,IAAgCC,EAAA1B,EAAE2B,OAAOC,SAAjC1B,EAAwBwB,EAAxBxB,MAAO2B,EAAiBH,EAAjBG,OAAQX,EAASQ,EAATR,KACnBN,EAAaK,OAAOf,EAAMiB,OAC1BH,EAAQC,OAAOf,EAAMiB,OAASF,OAAOC,EAAKC,OAW9C,IAAK,IAAIW,EAAI,EAAGA,GAAKD,EAAOV,MAAOW,GAAK,EAACC,EAAAD,GAUzCrB,YAAW,WACTX,EAAU0B,UAAW,C,GACpBZ,EAAW,KACdjB,EAAOqC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  timeout: 3000,\n});\n\nconst formEl = document.querySelector('form[class=\"form\"]');\nconst btnCreate = document.querySelector('button[type=\"submit\"]');\nconst onSubmit = e => {\n  btnCreate.disabled = true;\n  e.preventDefault();\n\n  const { delay, amount, step } = e.target.elements;\n  let delayValue = Number(delay.value);\n  let total = Number(delay.value) - Number(step.value);\n  function onSuccess(i) {\n    Notiflix.Notify.success(\n      `✅ Fulfilled promise ${i} in ${(total += Number(step.value))} ms`\n    );\n  }\n  function onFailure(i) {\n    Notiflix.Notify.failure(\n      `❌ Rejected promise ${i} in ${(total += Number(step.value))} ms`\n    );\n  }\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, delayValue)\n      .then(() => {\n        onSuccess(i);\n      })\n      .catch(() => {\n        onFailure(i);\n      });\n    delayValue += Number(step.value);\n  }\n  setTimeout(() => {\n    btnCreate.disabled = false;\n  }, delayValue+3000);\n  formEl.reset();\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","timeout","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$btnCreate","addEventListener","e","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","i","delayValue","then","success","concat","total","Number","step","value","onSuccess","catch","failure","onFailure","disabled","preventDefault","_elements","target","elements","amount","i1","_loop","reset"],"version":3,"file":"03-promises.cb03c9e3.js.map"}