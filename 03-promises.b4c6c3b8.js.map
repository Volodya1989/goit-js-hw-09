{"mappings":"AA8HA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnCEQ,SAASC,cAAc,sBAuC/BC,iBAAiB,UArCPC,IACfA,EAAEC,iBAEF,MAAMZ,MAAEA,EAAKa,OAAEA,EAAMC,KAAEA,GAASH,EAAEI,OAAOC,SACzC,IACIC,EADaC,OAAOlB,EAAMmB,OACLD,OAAOJ,EAAKK,OAErC,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAOM,MAAOC,GAAK,EACtCtB,EAAcsB,EAAGF,OAAOlB,EAAMmB,QAC3BE,MAAK,KACJC,QAAQC,IACN,uBAAqBH,QAAUH,GAAQC,OAAIJ,EAAOK,YAAgB,IAGrEK,OAAM,KACLF,QAAQC,IACN,sBAAoBH,QAAQH,GAAQC,OAAIJ,EAAOK,YAAgB,IAIvEG,QAAQG,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\n// const refs = {\n//   formEl: document.querySelector('.form'),\n//   inputDelay: document.querySelector(\"input[name='delay']\"),\n// };\n\n// let intId = null;\n// let position = null;\n// let total = null;\n// const formData = {};\n\n// const onInput = e => {\n//   if (e.target.value < 0) {\n//     e.target.value = 0;\n//   }\n//   if (e.target.name === 'amount' && e.target.value < 1) {\n//     e.target.value = 1;\n//   }\n//   formData[e.target.name] = e.target.value;\n// };\n// const onSubmit = e => {\n//   e.preventDefault();\n\n//   const { delay, amount, step } = formData;\n\n//   intId = setInterval(() => {\n//     position += 1;\n\n//     createPromise(position, delay)\n//       .then(({ position, delay }) => {\n//         if (position === 1) {\n//           total = parseInt(delay);\n//           console.log(`✅ Fulfilled promise ${position} in ${total} ms`);\n//           Notiflix.Notify.success(\n//             `✅ Fulfilled promise ${position} in ${total} ms`,\n//             {\n//               timeout: delay,\n//             }\n//           );\n//         } else {\n//           total += parseInt(step);\n//           console.log(`✅ Fulfilled promise ${position} in ${total} ms`);\n//           Notiflix.Notify.success(\n//             `✅ Fulfilled promise ${position} in ${total} ms`,\n//             {\n//               timeout: delay,\n//             }\n//           );\n//         }\n//       })\n//       .catch(({ position, delay }) => {\n//         if (position === 1) {\n//           total = parseInt(delay);\n//           console.log(`❌ Rejected promise ${position} in ${total} ms`);\n//           Notiflix.Notify.failure(\n//             `❌ Rejected promise ${position} in ${total} ms`,\n//             {\n//               timeout: delay,\n//             }\n//           );\n//         } else {\n//           total += parseInt(step);\n//           console.log(`❌ Rejected promise ${position} in ${total} ms`);\n//           Notiflix.Notify.failure(\n//             `❌ Rejected promise ${position} in ${total} ms`,\n//             {\n//               timeout: delay,\n//             }\n//           );\n//         }\n//       });\n//     if (position === parseInt(amount)) {\n//       return clearInterval(intId);\n//     }\n//   }, step);\n//   position = null;\n//   total = null;\n//   console.clear();\n// };\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// refs.formEl.addEventListener('input', onInput);\n\n// refs.formEl.addEventListener('submit', onSubmit);\n\n// import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form[class=\"form\"]');\n\nconst onSubmit = e => {\n  e.preventDefault();\n\n  const { delay, amount, step } = e.target.elements;\n  let delayValue = Number(delay.value);\n  let total = delayValue - Number(step.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, Number(delay.value))\n      .then(() => {\n        console.log(\n          `✅ Fulfilled promise ${i} in ${(total += Number(step.value))} ms`\n        );\n      })\n      .catch(() => {\n        console.log(\n          `❌ Rejected promise ${i} in ${(total += Number(step.value))} ms`\n        );\n      });\n  }\n  console.clear();\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","amount","step","target","elements","total","Number","value","i","then","console","log","catch","clear"],"version":3,"file":"03-promises.b4c6c3b8.js.map"}